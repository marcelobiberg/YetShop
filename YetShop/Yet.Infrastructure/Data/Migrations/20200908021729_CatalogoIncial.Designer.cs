// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Yet.Infrastructure.Data;

namespace Yet.Infrastructure.Data.Migrations
{
    [DbContext(typeof(CatalogoContexto))]
    [Migration("20200908021729_CatalogoIncial")]
    partial class CatalogoIncial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Yet-Shop")
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.catalogo_hilo", "'catalogo_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.catalogo_marca_hilo", "'catalogo_marca_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.catalogo_tipo_hilo", "'catalogo_tipo_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Yet.Core.Entidades.CatalogoAgregar.CatalogoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalogo_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("CatalogoMarcaId")
                        .HasColumnType("int");

                    b.Property<int>("CatalogoTipoId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagemUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogoMarcaId");

                    b.HasIndex("CatalogoTipoId");

                    b.ToTable("Catalogo");
                });

            modelBuilder.Entity("Yet.Core.Entidades.CatalogoAgregar.CatalogoMarca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalogo_marca_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("CatalogoMarcas");
                });

            modelBuilder.Entity("Yet.Core.Entidades.CatalogoAgregar.CatalogoTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalogo_tipo_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("CatalogoTipos");
                });

            modelBuilder.Entity("Yet.Core.Entidades.CestaAgregar.Cesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompradorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("Cestas");
                });

            modelBuilder.Entity("Yet.Core.Entidades.CestaAgregar.CestaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CatalogoItemId")
                        .HasColumnType("int");

                    b.Property<int>("CestaId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecoUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CestaId");

                    b.ToTable("CestaItens");
                });

            modelBuilder.Entity("Yet.Core.Entidades.PedidoAgregar.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompradorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Yet.Core.Entidades.PedidoAgregar.PedidoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecoUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Unidades")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("PedidoItens");
                });

            modelBuilder.Entity("Yet.Core.Entidades.CatalogoAgregar.CatalogoItem", b =>
                {
                    b.HasOne("Yet.Core.Entidades.CatalogoAgregar.CatalogoMarca", "CatalogoMarca")
                        .WithMany()
                        .HasForeignKey("CatalogoMarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yet.Core.Entidades.CatalogoAgregar.CatalogoTipo", "CatalogoTipo")
                        .WithMany()
                        .HasForeignKey("CatalogoTipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Yet.Core.Entidades.CestaAgregar.CestaItem", b =>
                {
                    b.HasOne("Yet.Core.Entidades.CestaAgregar.Cesta", null)
                        .WithMany("Items")
                        .HasForeignKey("CestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Yet.Core.Entidades.PedidoAgregar.Pedido", b =>
                {
                    b.OwnsOne("Yet.Core.Entidades.PedidoAgregar.Endereco", "EnderecoEntrega", b1 =>
                        {
                            b1.Property<int>("PedidoId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasColumnType("nvarchar(18)")
                                .HasMaxLength(18);

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasMaxLength(100);

                            b1.Property<string>("Estado")
                                .HasColumnType("nvarchar(60)")
                                .HasMaxLength(60);

                            b1.Property<string>("Pais")
                                .IsRequired()
                                .HasColumnType("nvarchar(90)")
                                .HasMaxLength(90);

                            b1.Property<string>("Rua")
                                .IsRequired()
                                .HasColumnType("nvarchar(180)")
                                .HasMaxLength(180);

                            b1.HasKey("PedidoId");

                            b1.ToTable("Pedidos");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");
                        });
                });

            modelBuilder.Entity("Yet.Core.Entidades.PedidoAgregar.PedidoItem", b =>
                {
                    b.HasOne("Yet.Core.Entidades.PedidoAgregar.Pedido", null)
                        .WithMany("PedidoItens")
                        .HasForeignKey("PedidoId");

                    b.OwnsOne("Yet.Core.Entidades.PedidoAgregar.CatalogoItemPedido", "ItemPedido", b1 =>
                        {
                            b1.Property<int>("PedidoItemId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CatalogoItemId")
                                .HasColumnType("int");

                            b1.Property<string>("ProdutoNome")
                                .IsRequired()
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.HasKey("PedidoItemId");

                            b1.ToTable("PedidoItens");

                            b1.WithOwner()
                                .HasForeignKey("PedidoItemId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
